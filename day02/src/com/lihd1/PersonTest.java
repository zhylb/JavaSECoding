package com.lihd1;

/**
 * 重写 overwrite
 * 1 子类继承父类后, 可以对父类中同名同参数的方法进行覆盖
 *
 * 2 重写以后, 通过子类创建子类对象, 当调用父类同名同参数的方法时, 实际执行是子类的方法
 *
 * 3 重写的规定
 *      权限修饰符 返回值 方法名(形参列表) throws Exception{
 *          //方法体
 *      }
 *      子类中的方法称为 重写方法, 父类中的方法称为被重写的方法
 *      1 子类重写的方法的方法名和 形参列表与父类被重写的方法名和形参列表相同
 *      2 子类重写父类的方法权限修饰符 不小于 父类的权限修饰符
 *          > 父类声明为private的方法无法被覆盖
 *          > 父类声明为static的方法无法被覆盖
 *      3 返回值类型
 *          > 父类中返回值类型为 void, 子类返回值类型也必须是void
 *          > 父类中的返回值为A, 子类中的返回值为A或A的子类
 *          > 父类中的返回值类型为基本数据类型(如double), 子类中返回值类型必须是相同的基本数据类型(必须是double)
 *      4 抛出异常
 *          > 子类中中抛出的异常 不大于 父类中抛出的异常
 *
 *      5 静态
 *          > 父类和子类中如果有同名同参数的方法, 要么都是非static(重写)的, 要么都是static(不是重写哦)的
 *
 *
 * 4 请谈谈重写和重载 ?
 *
 * sd
 * @author ：葬花吟留别1851053336@qq.com
 * @description：TODO
 * @date ：2021/11/17 9:03
 */
public class PersonTest {
    public static void main(String[] args) {
        Student s = new Student(12);

        s.showId();
        s.showAll();


    }
}
